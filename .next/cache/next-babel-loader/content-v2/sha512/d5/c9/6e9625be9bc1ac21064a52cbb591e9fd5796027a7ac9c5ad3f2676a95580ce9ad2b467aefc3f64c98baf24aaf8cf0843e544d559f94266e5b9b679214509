{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Image from 'next/image';\nimport ReactMarkdown from 'react-markdown';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\nimport js from 'react-syntax-highlighter/dist/cjs/languages/prism/javascript';\nimport css from 'react-syntax-highlighter/dist/cjs/languages/prism/css';\nimport classes from './post-content.module.css';\nimport PostHeader from './post-header';\nSyntaxHighlighter.registerLanguage('js', js);\nSyntaxHighlighter.registerLanguage('css', css);\n\nfunction PostContent(props) {\n  var post = props.post;\n  var imagePath = \"/images/posts/\".concat(post.slug, \"/\").concat(post.image);\n  var customRenderers = {\n    // img(image) {\n    //   return (\n    //     <Image\n    //       src={`/images/posts/${post.slug}/${image.src}`}\n    //       alt={image.alt}\n    //       width={600}\n    //       height={300}\n    //     />\n    //   );\n    // },\n    p: function p(paragraph) {\n      var node = paragraph.node;\n\n      if (node.children[0].tagName === 'img') {\n        var image = node.children[0];\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsx(Image, {\n            src: \"/images/posts/\".concat(post.slug, \"/\").concat(image.properties.src),\n            alt: image.alt,\n            width: 600,\n            height: 300\n          })\n        });\n      }\n\n      return /*#__PURE__*/_jsx(\"p\", {\n        children: paragraph.children\n      });\n    },\n    code: function code(_code) {\n      var className = _code.className,\n          children = _code.children;\n      var language = className.split('-')[1]; // className is smth like lang-js -> We need the \"js\" part here\n\n      return /*#__PURE__*/_jsx(SyntaxHighlighter, {\n        language: language,\n        children: children,\n        style: atomDark\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsx(PostHeader, {\n      title: post.title,\n      image: imagePath\n    }), /*#__PURE__*/_jsx(ReactMarkdown, {\n      components: customRenderers,\n      children: post.content\n    })]\n  });\n}\n\nexport default PostContent;","map":null,"metadata":{},"sourceType":"module"}