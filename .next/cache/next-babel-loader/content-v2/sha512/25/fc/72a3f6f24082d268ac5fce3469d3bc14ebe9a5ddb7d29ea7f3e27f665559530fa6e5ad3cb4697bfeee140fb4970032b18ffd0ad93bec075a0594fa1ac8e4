{"ast":null,"code":"import _regeneratorRuntime from \"/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/components/contact/contact-form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nfunction sendContactData() {\n  return _sendContactData.apply(this, arguments);\n}\n\nfunction _sendContactData() {\n  _sendContactData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('/api/contact', {\n              method: 'POST',\n              body: JSON.stringify({\n                email: enteredEmail,\n                name: enteredName,\n                message: enteredMessage\n              }),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || 'Something went wrong');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendContactData.apply(this, arguments);\n}\n\nfunction ContactForm() {\n  _s();\n\n  var _useState = useState(''),\n      enteredEmail = _useState[0],\n      setEnteredEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      enteredName = _useState2[0],\n      setEnteredName = _useState2[1];\n\n  var _useState3 = useState(''),\n      enteredMessage = _useState3[0],\n      setEnteredMessage = _useState3[1];\n\n  var _useState4 = useState(),\n      requestStatus = _useState4[0],\n      setRequestStatus = _useState4[1];\n\n  function sendMessageHandler(_x) {\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  function _sendMessageHandler() {\n    _sendMessageHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: function onChange(event) {\n              return setEnteredEmail(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: function onChange(event) {\n              return setEnteredName(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: function onChange(event) {\n            return setEnteredMessage(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"ZtVZIGxWGMiIHFXlkJJ1BDBZ9OI=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/components/contact/contact-form.js"],"names":["useState","classes","Notification","sendContactData","fetch","method","body","JSON","stringify","email","enteredEmail","name","enteredName","message","enteredMessage","headers","response","json","data","ok","Error","ContactForm","setEnteredEmail","setEnteredName","setEnteredMessage","requestStatus","setRequestStatus","sendMessageHandler","event","preventDefault","contact","form","controls","control","target","value","actions"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData() {\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify({\n      email: enteredEmail,\n      name: enteredName,\n      message: enteredMessage,\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong');\n  }\n}\n\nfunction ContactForm() {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredMessage, setEnteredMessage] = useState('');\n  const [requestStatus, setRequestStatus] = useState();\n\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n  }\n\n  return (\n    <section className={classes.contact}>\n      <h1>How can I help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Your Email</label>\n            <input\n              type='email'\n              id='email'\n              required\n              value={enteredEmail}\n              onChange={(event) => setEnteredEmail(event.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Your Name</label>\n            <input\n              type='text'\n              id='name'\n              required\n              value={enteredName}\n              onChange={(event) => setEnteredName(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='message'>Your Message</label>\n          <textarea\n            id='message'\n            rows='5'\n            required\n            value={enteredMessage}\n            onChange={(event) => setEnteredMessage(event.target.value)}\n          ></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}