{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/components/posts/post-detail/post-content.js\";\nimport ReactMarkdown from 'react-markdown';\nimport Image from 'next/image';\nimport classes from './post-content.module.css';\nimport PostHeader from './post-header';\n\nfunction PostContent(props) {\n  var post = props.post;\n  var imagePath = \"/images/posts/\".concat(post.slug, \"/\").concat(post.image);\n  var customRenderers = {\n    img: function img(image) {\n      return /*#__PURE__*/_jsxDEV(Image, {\n        src: \"/images/posts/\".concat(post.slug, \"/\").concat(image.src),\n        alt: image.alt,\n        width: 600,\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    },\n    p: function p(paragraph) {\n      var node = paragraph.node;\n\n      if (node.children[0].tagName === 'img') {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title,\n      image: imagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: customRenderers,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PostContent;\nexport default PostContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContent\");","map":{"version":3,"sources":["/home/tr3ch/Desktop/WORKSPACE/Next/completeProjectBLOG/components/posts/post-detail/post-content.js"],"names":["ReactMarkdown","Image","classes","PostHeader","PostContent","props","post","imagePath","slug","image","customRenderers","img","src","alt","p","paragraph","node","children","tagName","content","title"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAClBC,IADkB,GACTD,KADS,CAClBC,IADkB;AAG1B,MAAMC,SAAS,2BAAoBD,IAAI,CAACE,IAAzB,cAAiCF,IAAI,CAACG,KAAtC,CAAf;AAEA,MAAMC,eAAe,GAAG;AACtBC,IAAAA,GADsB,eAClBF,KADkB,EACX;AACT,0BACE,QAAC,KAAD;AACE,QAAA,GAAG,0BAAmBH,IAAI,CAACE,IAAxB,cAAgCC,KAAK,CAACG,GAAtC,CADL;AAEE,QAAA,GAAG,EAAEH,KAAK,CAACI,GAFb;AAGE,QAAA,KAAK,EAAE,GAHT;AAIE,QAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KAVqB;AAWtBC,IAAAA,CAXsB,aAWpBC,SAXoB,EAWT;AAAA,UACDC,IADC,GACQD,SADR,CACDC,IADC;;AAGT,UAAGA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBC,OAAjB,KAA6B,KAAhC,EAAuC,CAEtC;AACJ;AAjBqB,GAAxB;AAoBA,sBACE;AAAS,IAAA,SAAS,EAAEhB,OAAO,CAACiB,OAA5B;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEb,IAAI,CAACc,KAAxB;AAA+B,MAAA,KAAK,EAAEb;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEG,eAA3B;AAAA,gBAA6CJ,IAAI,CAACa;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KA/BQf,W;AAiCT,eAAeA,WAAf","sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport Image from 'next/image';\n\nimport classes from './post-content.module.css';\nimport PostHeader from './post-header';\n\nfunction PostContent(props) {\n  const { post } = props;\n\n  const imagePath = `/images/posts/${post.slug}/${post.image}`;\n\n  const customRenderers = {\n    img(image) {\n      return (\n        <Image\n          src={`/images/posts/${post.slug}/${image.src}`}\n          alt={image.alt}\n          width={600}\n          height={300}\n        />\n      );\n    },\n    p(paragraph) {\n        const { node } = paragraph;\n\n        if(node.children[0].tagName === 'img') {\n            \n        }\n    }\n  };\n\n  return (\n    <article className={classes.content}>\n      <PostHeader title={post.title} image={imagePath} />\n      <ReactMarkdown components={customRenderers}>{post.content}</ReactMarkdown>\n    </article>\n  );\n}\n\nexport default PostContent;\n"]},"metadata":{},"sourceType":"module"}